# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo  '$(System.DefaultWorkingDirectory)'
      dir  '$(System.DefaultWorkingDirectory)'
      dir
      dir ./backend
- task: Gradle@2
  inputs:
    workingDirectory: 'backend'
    gradleWrapperFile: 'backend/gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean build -x test -S'


- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '$(System.DefaultWorkingDirectory)/backend/build/libs/'
    packDestination: '$(Build.ArtifactStagingDirectory)/**/'
    versioningScheme: 'off'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '0dfb3042-22bf-400a-9490-36ea26c7b3b6'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/backend/build/libs/'
    ArtifactName: 'artifact-compraventa'
    publishLocation: 'Container'