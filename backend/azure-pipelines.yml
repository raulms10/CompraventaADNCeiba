# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: 'backend'
    gradleWrapperFile: 'backend/gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean build war -x test -S'

- task: CmdLine@2
  inputs:
    script: |
      echo '$(System.DefaultWorkingDirectory)'
      dir '$(System.DefaultWorkingDirectory)'
      dir $(System.DefaultWorkingDirectory)/backend/build/libs/
      dir ./backend    

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/backend/build/libs/'
    ArtifactName: 'artifact-compraventa'
    publishLocation: 'Container'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1 (549874f8-cc36-4540-8693-9cba1c6a34e4)'
    appType: 'webAppLinux'
    WebAppName: 'adn-compraventa-back'
    packageForLinux: '$(System.DefaultWorkingDirectory)/backend/build/libs/*.war'
    RuntimeStack: 'TOMCAT|9.0-jre8'